services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV:  development
      PORT: 3000
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: poleparty
      POSTGRES_PASSWORD: poleparty
      POSTGRES_DB: poleparty
      KAFKA_BROKERS: kafka:9092
      KAFKA_CLIENT_ID: polling-app
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    develop:
      watch:
        - path: ./scripts
          target: /usr/src/app/scripts
          action: sync
        - path: ./src
          target: /usr/src/app/src
          action: sync
        - path: ./index.ts
          target: /usr/src/app/index.ts
          action: sync
        - path: ./package.json
          action: rebuild
        - path: ./tsconfig.json
          action: rebuild
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_LOG_RETENTION_HOURS: 168
    healthcheck:
      test: nc -z kafka 9092 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    healthcheck:
      test: echo stat | nc localhost 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "2181:2181"
    networks:
      - app-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: poleparty
      POSTGRES_PASSWORD: poleparty
      POSTGRES_DB: poleparty
      POSTGRES_MAX_CONNECTIONS: "1000"
    command: 
      - "postgres"
      - "-c"
      - "max_connections=1000"
    ports:
      - "5050:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U poleparty"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data:

networks:
  app-network:
    driver: bridge
